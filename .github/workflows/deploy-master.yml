name: Build and Deploy to Azure Web App - Master Branch

on:
  push:
    branches:
      - master

env:
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
  AZURE_WEBAPP_NAME: ${{ vars.AZURE_WEBAPP_NAME }}
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}
  IMAGE_NAME: ${{ vars.AZURE_WEBAPP_NAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v3

      - name: üîë Azure login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ vars.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ vars.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ vars.AZURE_TENANT_ID }}"
            }

      - name: üóùÔ∏è ACR login
        run: |
          az acr login --name $ACR_LOGIN_SERVER

      - name: üõ†Ô∏è Build Docker image
        run: |
          docker build -t $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:latest .

      - name: üì¶ Push Docker image to ACR
        run: |
          docker push $ACR_LOGIN_SERVER/${{ env.IMAGE_NAME }}:latest

      - name: üöÄ Deploy to Azure Web App for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest